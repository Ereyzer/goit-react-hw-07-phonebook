{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","helpers/filterItems.js","helpers/filterTest.js","service/apiService.js","redux/contacts/contacts-operation.js","components/ContactForm/ContactForm.js","components/Loader/Loader.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","redux/initialState.js","redux/contacts/contactsReducer.js","redux/contacts/contacts-persistor.js","redux/store.js","redux/middleware.js","index.js"],"names":["module","exports","addContactAction","createAction","filterAction","deleteActions","existContactsAction","getContacts","contacts","items","getFilter","filter","isLoading","loading","error","getContactsWithFilter","createSelector","name","data","test","slice","length","toLowerCase","testFunc","filterItems","BASE_URL","axios","get","then","r","catch","console","log","post","id","method","url","fetchContacts","createAsyncThunk","actions","_","a","rejectWithValue","apiServices","result","message","addNewContact","deleteContact","status","ContactForm","inputIdName","useRef","uuidv4","inputIdNumber","useState","newName","setNewName","number","setNumber","useSelector","contactsSelectors","dispatch","useDispatch","className","style","Form","onSubmit","e","preventDefault","trim","some","toast","contactsActions","contactOperations","success","info","htmlFor","current","Label","Input","type","value","onChange","target","AddBtn","Button","variant","color","Loading","height","width","ContactList","useEffect","map","styles","Item","Text","onClick","onDeleteElement","Filter","inputId","React","App","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","initialState","createReducer","fulfilled","payload","state","contact","pending","rejected","contactsReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","contactsPersistor","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21a18feb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__1F0V5\",\"AddBtn\":\"ContactForm_AddBtn__1p_Mx\",\"Item\":\"ContactForm_Item__3bd6s\",\"Label\":\"ContactForm_Label__-113E\",\"Input\":\"ContactForm_Input__2deM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ContactList_Button__21Aqc\",\"Item\":\"ContactList_Item__3PQXl\",\"Text\":\"ContactList_Text__bkDmv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__1MI3i\",\"Input\":\"Filter_Input__3e6d8\",\"Item\":\"Filter_Item__Kdpzq\"};","// import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContactAction = createAction('contacts/addContact');\n\nexport const filterAction = createAction('contacts/filter');\nexport const deleteActions = createAction('contacts/deleteContact');\n\nexport const existContactsAction = createAction('contact/existContact');\n","import { createSelector } from 'reselect';\nimport { filterItems } from '../../helpers/filterItems';\nexport const getContacts = ({ contacts }) => contacts.items;\nexport const getFilter = ({ contacts }) => contacts.filter;\nexport const isLoading = ({ contacts }) => contacts.loading;\nexport const error = ({ contacts }) => contacts.error;\n// export const getContactsWithFilter = data =>\n//   filterItems(getContacts(data), getFilter(data));\n\nexport const getContactsWithFilter = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return filterItems(contacts, filter);\n  },\n);\n","import { testFunc } from './filterTest';\n\nexport function filterItems(items, filter) {\n  if (filter === '') return items;\n  return items.filter(({ data: { name } }) => testFunc(filter, name));\n}\n","export function testFunc(filter, name) {\n  const test = name.slice(0, filter.length);\n  return filter.toLowerCase() === test.toLowerCase();\n}\n","import axios from 'axios';\nconst BASE_URL = 'http://localhost:4040/contacts';\n\nconst getContacts = () =>\n  axios\n    .get(BASE_URL)\n    .then(r => r)\n    .catch(console.log);\n\nconst deleteContact = id =>\n  axios({\n    method: 'delete',\n    url: `${BASE_URL}/${id}`,\n  });\n// .then(r => r)\n// .catch(console.log);\n\nconst setContacts = data => {\n  return axios.post(BASE_URL, { data });\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getContacts, setContacts, deleteContact };\n","import * as actions from './contacts-actions';\nimport apiServices from '../../service/apiService';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n// export const fetchContacts = () => async dispatch => {\n//   const result = await apiServices.getContacts();\n//   if (result.status === 200)\n//     return dispatch(actions.existContactsAction(result.data));\n// };\n\nexport const fetchContacts = createAsyncThunk(\n  [actions.existContactsAction],\n  async (_, { rejectWithValue }) => {\n    try {\n      const result = await apiServices.getContacts();\n      return result.data;\n    } catch (error) {\n      return rejectWithValue(`${error.message}`);\n    }\n  },\n);\n\n// export const addNewContact = data => async dispatch => {\n//   try {\n//     const result = await apiServices.setContacts(data);\n//     console.log('result', 111, result);\n//     if (result.status === 201)\n//       return dispatch(actions.addContactAction(result.data));\n//   } catch (error) {\n//     return error.message;\n//   }\n// };\n\nexport const addNewContact = createAsyncThunk(\n  [actions.addContactAction],\n  async (data, { rejectWithValue }) => {\n    try {\n      const result = await apiServices.setContacts(data);\n      return result.data;\n    } catch (error) {\n      return rejectWithValue(\n        `${error.message}-- we can not add this contact please reload this page and try again`,\n      );\n    }\n  },\n);\n\n// export const deleteContact = id => async dispatch => {\n//   const result = await apiServices.deleteContact(id);\n//   if (result.status === 200) return dispatch(actions.deleteActions(id));\n// };\n\nexport const deleteContact = createAsyncThunk(\n  [actions.deleteActions],\n  async (id, { rejectWithValue }) => {\n    try {\n      const result = await apiServices.deleteContact(id);\n      if (result.status === 200) return id;\n    } catch (error) {\n      return rejectWithValue(\n        `${error.message}-- we can not delete this contact please reload this page and try again`,\n      );\n    }\n  },\n);\n","import React, { useState, useRef } from 'react';\nimport style from './ContactForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from '@material-ui/core/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\nimport { contactOperations } from '../../redux/contacts';\n\nexport default function ContactForm() {\n  const inputIdName = useRef(uuidv4());\n  const inputIdNumber = useRef(uuidv4());\n  const [newName, setNewName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  const submitForm = e => {\n    e.preventDefault();\n    if (newName.trim() === '' || number.trim() === '') {\n      toast.info('fill in all fields');\n      return;\n    }\n\n    if (\n      items.some(\n        ({ data: { name } }) => name.toLowerCase() === newName.toLowerCase(),\n      )\n    ) {\n      toast.error(newName + ' is already exist');\n      return;\n    }\n\n    dispatch(contactsActions.filterAction(''));\n    dispatch(contactOperations.addNewContact({ name: newName, number }));\n\n    toast.success('you have new contact');\n    setNewName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form id=\"form\" className={style.Form} onSubmit={submitForm}>\n        <label htmlFor={inputIdName.current} className={style.Label}>\n          Name\n        </label>\n        <input\n          id={inputIdName.current}\n          className={style.Input}\n          type=\"text\"\n          name=\"name\"\n          value={newName}\n          onChange={e => setNewName(e.target.value)}\n        ></input>\n        <label\n          htmlFor={inputIdNumber.current}\n          className={style.Label}\n          name=\"number\"\n        >\n          Number\n        </label>\n        <input\n          id={inputIdNumber.current}\n          className={style.Input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={e => setNumber(e.target.value)}\n        ></input>\n        <div className={style.AddBtn}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Add contact\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n}\n","import React from 'react';\nimport './Loading.css';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport Loader from 'react-loader-spinner';\nconst Loading = () => (\n  <Loader\n    type=\"TailSpin\"\n    color=\"#00BFFF\"\n    height={100}\n    width={100}\n    // timeout={3000} //3 secs\n    className=\"Loading\"\n  />\n);\n\nexport default Loading;\n","import React, { useEffect } from 'react';\nimport styles from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { contactsSelectors } from '../../redux/contacts';\nimport { contactOperations } from '../../redux/contacts';\nimport Loading from '../Loader/Loader';\n\nexport default function ContactList() {\n  const contacts = useSelector(contactsSelectors.getContactsWithFilter);\n  const isLoading = useSelector(contactsSelectors.isLoading);\n  const dispatch = useDispatch();\n  console.log(contacts);\n\n  const onDeleteElement = ({ id, name }) => {\n    toast.info(name + ' is deleted');\n    return dispatch(contactOperations.deleteContact(id));\n  };\n\n  useEffect(() => {\n    dispatch(contactOperations.fetchContacts());\n  }, [dispatch]);\n\n  if (isLoading) {\n    return <Loading />;\n  } else if (!isLoading && contacts[0]) {\n    return (\n      <ul>\n        {contacts.map(({ data: { name, number }, id }) => {\n          return (\n            <li key={id}>\n              <div className={styles.Item}>\n                <p className={styles.Text}>\n                  {name}: <span>{number}</span>\n                </p>\n                <button\n                  type=\"button\"\n                  className={styles.Button}\n                  onClick={() => onDeleteElement({ id, name })}\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  } else {\n    return <h3>is Empty</h3>;\n  }\n}\n","import React from 'react';\nimport styles from './Filter.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\n\nexport default function Filter() {\n  const filter = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  const inputId = React.useRef(uuidv4());\n  return (\n    <div className={styles.Item}>\n      <label className={styles.Label} htmlFor={inputId.current}>\n        Find contacts by name\n      </label>\n      <input\n        className={styles.Input}\n        id={inputId.current}\n        value={filter}\n        onChange={e =>\n          dispatch(contactsActions.filterAction(`${e.target.value.trim()}`))\n        }\n      ></input>\n    </div>\n  );\n}\n","import './App.css';\nimport React, { useEffect } from 'react';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { contactsSelectors } from '../../redux/contacts';\nimport { useSelector } from 'react-redux';\n\nexport default function App() {\n  const error = useSelector(contactsSelectors.error);\n  useEffect(() => {\n    if (error) {\n      toast.error(error);\n      return;\n    }\n  }, [error]);\n  return (\n    <div>\n      <h1 id=\"title\">Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n\n      <ContactList />\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <ToastContainer />\n    </div>\n  );\n}\n","export const initialState = {\n  contacts: {\n    items: [],\n    filter: '',\n    error: null,\n    loading: false,\n  },\n};\n","import { combineReducers } from 'redux';\nimport { initialState } from '../initialState';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { filterAction } from './contacts-actions';\nimport {\n  fetchContacts,\n  addNewContact,\n  deleteContact,\n} from './contacts-operation';\n\nconst items = createReducer(initialState.contacts.items, {\n  [fetchContacts.fulfilled]: (_, { payload }) => [...payload],\n  [addNewContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\nconst loading = createReducer(initialState.contacts.loading, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n});\nconst error = createReducer(initialState.contacts.error, {\n  [fetchContacts.pending]: () => null,\n  [addNewContact.pending]: () => null,\n  [deleteContact.pending]: () => null,\n  [fetchContacts.rejected]: (_, { payload }) => payload,\n  [deleteContact.rejected]: (_, { payload }) => payload,\n  [addNewContact.rejected]: (_, { payload }) => payload,\n});\n\nconst filter = createReducer(initialState.contacts.filter, {\n  [filterAction]: (_, { payload }) => payload,\n});\n\nexport const contactsReducer = combineReducers({\n  items,\n  filter,\n  error,\n  loading,\n});\n","import { persistReducer } from 'redux-persist';\nimport { contactsReducer } from './contactsReducer';\nimport storage from 'redux-persist/lib/storage';\n\nconst contactsPersistConfig = {\n  key: 'List',\n  storage,\n  blacklist: ['filter', 'items'],\n};\n\nexport const contactsPersistor = persistReducer(\n  contactsPersistConfig,\n  contactsReducer,\n);\n","import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore } from 'redux-persist';\nimport { contactsPersistor } from './contacts/contacts-persistor';\nimport { middleware } from './middleware';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsPersistor,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nexport const middleware = getDefaultMiddleware => {\n  if (process.env.NODE_ENV === `development`) {\n    const { logger } = require(`redux-logger`);\n\n    return [\n      ...getDefaultMiddleware({\n        serializableCheck: {\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n      }),\n      logger,\n    ];\n  } else {\n    return [\n      ...getDefaultMiddleware({\n        serializableCheck: {\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n      }),\n    ];\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}